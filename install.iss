; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Dev Proxy"
#define MyAppSetupExeName "DevProxySetup"
#define MyAppVersion "0.16.1"
#define MyAppPublisher "Microsoft"
#define MyAppURL "https://aka.ms/devproxy"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{4448FDE7-D519-4009-AFE2-0C5D0AA9C3D2}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
UninstallDisplayName={#MyAppName} v{#MyAppVersion}
UninstallDisplayIcon={app}\icon.ico
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
LicenseFile=..\LICENSE
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=lowest
OutputBaseFilename={#MyAppSetupExeName}
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Registry] 
Root: HKCU; Subkey: "Environment"; ValueType: expandsz; ValueName: "Path"; ValueData: "{olddata};{app}"; Flags: preservestringtype

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: ".\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; Excludes: "*.iss"

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[UninstallDelete]
Type:files;Name:"{app}\rootCert.pfx"

[Code]
function UpdatePath(Param: string): string;
var
  OrigPath: string;
begin
  // Get original PATH value
  if not RegQueryStringValue(HKEY_CURRENT_USER, 'Environment', 'Path', OrigPath) then
    OrigPath := '';

  // If the path is already there, do nothing
  if Pos(';' + ExpandConstant('{app}') + ';', ';' + OrigPath + ';') > 0 then
    Result := OrigPath
  else
    // Otherwise, add it
    Result := OrigPath + ';' + ExpandConstant('{app}');
end;

procedure DeinitializeSetup();
var
  OrigPath: string;
begin
  OrigPath := UpdatePath('');
  // Set the updated path during installation
  RegWriteStringValue(HKEY_CURRENT_USER, 'Environment', 'Path', OrigPath);
end;